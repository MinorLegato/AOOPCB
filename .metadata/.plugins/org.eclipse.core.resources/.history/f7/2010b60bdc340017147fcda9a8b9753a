import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class Grid extends JPanel {
	private static final long serialVersionUID = 1L;

	private final int MAX_WIDTH  = 1000;
	private final int MAX_HEIGHT = 1000;
	private final int MAX_SIZE 	 = MAX_WIDTH * MAX_HEIGHT;

	private final int grid[] = new int[MAX_SIZE];

	private int width;
	private int height;
	private int tileSize;

	private float zoom = 1.0f;

	public Grid(int width, int height, int tileSize) {
		assert width < MAX_WIDTH && width < MAX_HEIGHT;

        setPreferredSize(new Dimension(width, height));
        this.width = width;
        this.height = height;
        this.tileSize = tileSize;

        for (int y = 0; y < height; y++) {
        	for (int x = 0; x < width; x++) {
        	}
        }

    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        Graphics2D g2 = (Graphics2D) g;

        for (int y = 0; y < height; y++) {
        	for (int x = 0; x < width; x++) {
        		if (getComponent(x, y) == 1) {
        		}
        	}
        }
    }

    public int getComponent(int x, int y) {
    	return grid[y * width + x];
    }

    public void addComponent(int x, int y, int c) {
    	grid[y * width + x] = c;
    }

    public static void main(final String[] args) {
    	JFrame frame = new JFrame("Test Frame");

    	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    	frame.add(new Grid(800, 800, 4), BorderLayout.CENTER);
    	frame.pack();
    	frame.setLocationRelativeTo(null);
    	frame.setVisible(true);

    	frame.addKeyListener(new KeyListener() {
			public void keyPressed(KeyEvent e) { if (e.getKeyCode() == KeyEvent.VK_ESCAPE) System.exit(0); }
			public void keyReleased(KeyEvent e) { }
			public void keyTyped(KeyEvent e) { }
		});

    	while (true) {
    		frame.repaint();
    	}
    }

}
